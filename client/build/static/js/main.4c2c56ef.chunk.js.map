{"version":3,"sources":["Header.js","PlaceholderSquare.js","LoadingSpinner.js","DropdownMenu.js","ArtResult.js","ImageModal.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","PlaceholderSquare","id","style","this","props","parent_state","displayPlaceholderSquare","override","css","_templateObject","LoadingSpinner","console","log","loading","react_spinners","sizeUnit","height","color","React","DropdownMenu","onSubmit","handleDropdownSubmit","value","onChange","handleDropdownChange","type","LoadingSpinner_LoadingSpinner","ArtResult","imageURL","learnMoreURL","displayArtResult","src","alt","onClick","viewBigImage","href","ImageModal","showModal","closeBigImage","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","display","displayLargeArt","bind","assertThisInitialized","event","setState","target","cooperHewittSearchByTagFromAPI","preventDefault","_this2","randomNumber","Math","floor","random","axios","get","concat","then","response","data","objects","images","z","url","catch","error","BigImageURL","Header_Header","DropdownMenu_DropdownMenu","PlaceholderSquare_PlaceholderSquare","ImageModal_ImageModal","ArtResult_ArtResult","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c2c56ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n\n        <h1 className=\"Header\">Art Thief</h1>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class PlaceholderSquare extends Component {\n  render() {\n    return (\n\n      <div id=\"placeholder-square\" style={this.props.parent_state.displayPlaceholderSquare}></div>\n\n    );\n  }\n}\n","import React from 'react';\nimport { css } from 'react-emotion';\n//react-spinners is an npm package\nimport { ScaleLoader } from 'react-spinners';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nexport default class LoadingSpinner extends React.Component {\n  render() {\n    console.log(\"loading:\", this.props.loading)\n    return (\n      <span className='sweet-loading'>\n        <ScaleLoader\n          className={override}\n          sizeUnit={\"px\"}\n          // size={32}\n          height={32}\n          color={'#000'}\n          loading={this.props.loading}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport default class DropdownMenu extends Component {\n  render() {\n    return (\n\n    <form onSubmit={this.props.handleDropdownSubmit} >\n\n      <select id=\"tag\"\n\n              value={this.props.parent_state.value}\n              onChange={this.props.handleDropdownChange}>\n\n        <option value=\"modernism\">choose search keyword</option>\n        <option value=\"abstract\">abstract</option>\n        <option value=\"advertising\">advertising</option>\n        <option value=\"geometric\">geometric</option>\n        <option value=\"pattern\">pattern</option>\n        <option value=\"floral\">floral</option>\n        <option value=\"decorative\">decorative</option>\n        <option value=\"ornament\">ornament</option>\n        <option value=\"art deco\">art deco</option>\n        <option value=\"textile design\">textile desgin</option>\n        <option value=\"modernism\">modernism</option>\n        <option value=\"angular\">angular</option>\n        <option value=\"organic\">organic</option>\n\n      </select>\n\n      <input type=\"submit\"\n             value=\"submit\" />\n    <LoadingSpinner loading={this.props.loading} />\n    </form>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport default class ArtResult extends Component {\n  render() {\n\n  // Some variables to make this page easier to read.\n  const imageURL = this.props.parent_state.imageURL\n  const learnMoreURL = this.props.parent_state.learnMoreURL\n\n    return (\n\n      <div className=\"ArtResult\" style={this.props.parent_state.displayArtResult}>\n\n        <img src={imageURL}\n             alt=\"random item from collection\"\n             className=\"image-URL\"\n             onClick={this.props.viewBigImage}/>\n\n        <div >\n          <a href={learnMoreURL} className=\"learn-more-link\">learn more about this item</a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n\n\nexport default class ImageModal extends Component {\n  render() {\n    return (\n\n      <div className=\"modal-background\" style={this.props.parent_state.showModal}>\n        <img className=\"image-large\" src={this.props.parent_state.imageURL} onClick={this.props.closeBigImage} alt=\"\"/>\n      </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// ===============================\n// Importing Pages\n// ===============================\nimport Header from './Header';\nimport PlaceholderSquare from './PlaceholderSquare';\nimport DropdownMenu from './DropdownMenu';\nimport ArtResult from './ArtResult';\nimport ImageModal from './ImageModal';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false, // the loading spinner\n      // serverSource: 'https://art-thief.herokuapp.com/searchbytag',\n      // serverSource: 'http://localhost:8000/searchbytag',\n      imageURL:'',\n      learnMoreURL:'',\n      value:'modernism', //starting with something in case user doesn't choose\n      showModal: {\"display\": \"none\"},\n      displayArtResult: {\"display\": \"none\"},\n      displayLargeArt: {\"display\": \"none\"},\n      displayPlaceholderSquare: {\"display\": \"block\"},\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    this.handleDropdownSubmit = this.handleDropdownSubmit.bind(this);\n    this.viewBigImage = this.viewBigImage.bind(this);\n    this.closeBigImage = this.closeBigImage.bind(this);\n\n  }\n// ***********************************\n// End of constructor\n// ***********************************\n\n\n\n //  ==================================\n //  dropdown menu. First they choose\n //  a value/search tag in the Change event,\n //  then submit that value.\n //  ==================================\n  handleDropdownChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleDropdownSubmit(event) {\n    // let tag = this.state.value\n    console.log('the current lookup tag is: ' + this.state.value);\n    this.cooperHewittSearchByTagFromAPI()\n    this.setState({displayArtResult: {\"display\": \"block\"}})\n    this.setState({displayPlaceholderSquare: {\"display\": \"none\"}})\n    event.preventDefault();\n\n  }\n\n  cooperHewittSearchByTagFromAPI() {\n    this.setState({loading: true})\n    // generate a random number to select from returned array of objects\n    let randomNumber = Math.floor((Math.random() * 56) + 1);\n    console.log(\"randomNumber:\", randomNumber)\n\n    axios.get(`https://art-thief.herokuapp.com/searchbytag/`+`${this.state.value}`)\n      .then( (response) => {\n        this.setState({loading: false});\n        this.setState({imageURL: response.data.objects[randomNumber].images[0].z.url})\n        this.setState({learnMoreURL: response.data.objects[randomNumber].url})\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n\n //  ==================================\n //  The modal: the expanded image user clicks\n //  ==================================\n  viewBigImage(event) {\n    // console.log(\"image clicked\")\n    this.setState({showModal: {'display': \"block\"}})\n    this.setState({BigImageURL: this.imageURL})\n  }\n\n  closeBigImage(event) {\n    // console.log(\"close big image\")\n    this.setState({showModal: {'display': \"none\"}})\n  }\n\n\n//  ==================================\n//  And finally, the render\n//  ==================================\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        Reveal a random item from the Cooper Hewitt Museum:\n        <br />\n        <DropdownMenu handleDropdownChange={this.handleDropdownChange}\n                      handleDropdownSubmit={this.handleDropdownSubmit}\n                      loading={this.state.loading}\n                      parent_state={this.state}/>\n        <PlaceholderSquare parent_state={this.state} />\n        <ImageModal parent_state={this.state} closeBigImage={this.closeBigImage} />\n        <ArtResult parent_state={this.state} viewBigImage={this.viewBigImage} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}