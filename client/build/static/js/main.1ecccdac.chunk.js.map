{"version":3,"sources":["Header.js","PlaceholderImage.js","LoadingSpinner.js","DropdownMenu.js","ArtResult.js","ImageModal.js","InformationPanel.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","Component","render","className","href","PlaceholderImage","style","this","props","parent_state","displayPlaceholderImage","id","alt","src","onMouseOver","event","currentTarget","onMouseOut","override","css","LoadingSpinner","React","sizeUnit","height","color","loading","DropdownMenu","onSubmit","handleDropdownSubmit","value","onChange","handleDropdownChange","type","class","ArtResult","displayArtResultImage","imageURL","onClick","viewBigImage","ImageModal","displayModal","closeBigImage","InformationPanel","displayIntroMessage","displayArtResultInfo","itemTitle","itemMedium","itemInfo","learnMoreURL","Footer","App","constructor","super","state","displayLargeArt","displayPlaceholderSquare","bind","setState","target","cooperHewittSearchByTagFromAPI","preventDefault","axios","get","then","response","data","objects","_Lodash","shuffle","console","log","length","images","z","url","title","medium","label_text","catch","error","BigImageURL","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ecccdac.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n\n        <header>\n          <h1 className=\"header\"><a href=\"/\" className=\"header-link\">Art Thief</a></h1>\n        </header>\n    );\n  }\n}\n          // <span className=\"intro-message\">Be inspired by random items from the Cooper Hewitt Museum</span>\n","import React, { Component } from 'react';\n\nexport default class PlaceholderImage extends Component {\n  render() {\n    return (\n\n      <div style={this.props.parent_state.displayPlaceholderImage}>\n\n        <img id=\"placeholder-image\"\n\n             alt=\"\"\n\n             src=\"./images/Cooper-Hewitt_Museum02.png\"\n\n             onMouseOver={ (event) => {\n               event.currentTarget.src = \"https://i.imgur.com/IwBKBye.png\"\n             }}\n\n             onMouseOut={ (event) => {\n               event.currentTarget.src = \"./images/Cooper-Hewitt_Museum02.png\"\n             }}\n\n             />\n\n      </div>\n\n    );\n  }\n}\n\n\n","import React from 'react';\nimport { css } from 'emotion';\n//react-spinners is an npm package\nimport { ScaleLoader } from 'react-spinners';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nexport default class LoadingSpinner extends React.Component {\n  render() {\n    return (\n      <span className='sweet-loading'>\n        <ScaleLoader\n          className={override}\n          sizeUnit={\"px\"}\n          // size={32}\n          height={32}\n          color={'#000'}\n          loading={this.props.loading}\n        />\n      </span>\n    )\n  }\n}\n","import React, { Component } from 'react';\n// the spinner in an npm package\nimport LoadingSpinner from './LoadingSpinner';\n\nexport default class DropdownMenu extends Component {\n  render() {\n    return (\n\n    <form onSubmit={this.props.handleDropdownSubmit} >\n\n      <select id=\"tag\"\n              value={this.props.parent_state.value}\n              onChange={this.props.handleDropdownChange}>\n\n        <option value=\"exoticism\">choose search keyword</option>\n        <option className=\"dropdown-item-style\" value=\"abstract\">abstract</option>\n        <option className=\"dropdown-item-style\" value=\"angular\">angular</option>\n        <option className=\"dropdown-item-style\" value=\"graphic design\">graphic design</option>\n        <option className=\"dropdown-item-style\" value=\"art deco\">art deco</option>\n        <option className=\"dropdown-item-style\" value=\"art nouveau\">art nouveau</option>\n        <option className=\"dropdown-item-style\" value=\"chairs\">chairs</option>\n        <option className=\"dropdown-item-style\" value=\"circular\">circular</option>\n        <option className=\"dropdown-item-style\" value=\"geometric\">geometric</option>\n        <option className=\"dropdown-item-style\" value=\"graphic designers\">graphic designers</option>\n        <option className=\"dropdown-item-style\" value=\"industrial design\">industrial design</option>\n        <option className=\"dropdown-item-style\" value=\"intricate\">intricate</option>\n        <option className=\"dropdown-item-style\" value=\"kitchen\">kitchen</option>\n        <option className=\"dropdown-item-style\" value=\"modernism\">modernism</option>\n        <option className=\"dropdown-item-style\" value=\"posters\">posters</option>\n        <option className=\"dropdown-item-style\" value=\"simple\">simple</option>\n        <option className=\"dropdown-item-style\" value=\"textile design\">textile desgin</option>\n\n      </select>\n\n      <input type=\"submit\"\n             class=\"button\"\n             id=\"submit-button\"\n             value=\"submit\" />\n\n      <LoadingSpinner loading={this.props.loading} />\n\n    </form>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport default class ArtResult extends Component {\n  render() {\n\n    return (\n\n      <span className=\"ArtResult\"\n            style={this.props.parent_state.displayArtResultImage}>\n\n        <img src={this.props.parent_state.imageURL}\n             alt=\"random item from Cooper Hewitt collection based on search tag\"\n             className=\"image-URL\"\n             onClick={this.props.viewBigImage}/>\n\n      </span>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\n\n\nexport default class ImageModal extends Component {\n  render() {\n    return (\n\n      <div className=\"modal-background\" style={this.props.parent_state.displayModal}>\n        <img className=\"image-large\"\n             src={this.props.parent_state.imageURL}\n             onClick={this.props.closeBigImage}\n             alt=\"\"\n             />\n      </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport default class InformationPanel extends Component {\n  render() {\n    return (\n\n        <aside className=\"info-panel\">\n          <p style={this.props.parent_state.displayIntroMessage}className=\"intro-message\">Be inspired by random items from the Cooper Hewitt Museum</p>\n          <h2 style={this.props.parent_state.displayArtResultInfo}className=\"item-title\">{this.props.parent_state.itemTitle}</h2>\n          <p style={this.props.parent_state.displayArtResultInfo}className=\"item-medium\">{this.props.parent_state.itemMedium}</p>\n          <p style={this.props.parent_state.displayArtResultInfo}className=\"item-information\">{this.props.parent_state.itemInfo}</p>\n          <p style={this.props.parent_state.displayArtResultInfo}><a className=\"learn-more-link\" href={this.props.parent_state.learnMoreURL}>learn more about this item</a></p>\n          <br/>\n          <br/>\n          <br/>\n        </aside>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n\n        <footer>\n          <span className=\"footerLink\">made with <i className=\"fas fa-heart\"></i><a href=\"https://sarahphillipsdev.surge.sh\"> by Sarah Phillips</a></span>\n          <span className=\"footerLink\"><a href=\"https://github.com/snphillips/todoodles\"><i className=\"fab fa-github\"></i></a></span>\n        </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _Lodash from 'lodash';\n\n// ===============================\n// Importing Pages\n// ===============================\nimport Header from './Header';\nimport PlaceholderImage from './PlaceholderImage';\nimport DropdownMenu from './DropdownMenu';\nimport ArtResult from './ArtResult';\nimport ImageModal from './ImageModal';\nimport InformationPanel from './InformationPanel';\nimport Footer from './Footer';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false, // the loading spinner\n      // serverSource: 'https://art-thief.herokuapp.com/searchbytag',\n      // serverSource: 'http://localhost:8000/searchbytag',\n      imageURL:\"\",\n      itemTitle: \"\",\n      itemMedium: \"\",\n      itemInfo: \"\",\n      learnMoreURL:\"\",\n      value:\"exoticism\", //starting with a value in case the user doesn't choose before hitting submit\n      displayArtResultImage: {\"display\": \"none\"},\n      displayArtResultInfo: {\"display\": \"none\"}, // this refers to all image details like title, materials, url etc.\n      displayModal: {\"display\": \"none\"},\n      displayIntroMessage: {\"display\": \"inline\"},\n      displayLargeArt: {\"display\": \"none\"},\n      displayPlaceholderSquare: {\"display\": \"block\"},\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    this.handleDropdownSubmit = this.handleDropdownSubmit.bind(this);\n    this.viewBigImage = this.viewBigImage.bind(this);\n    this.closeBigImage = this.closeBigImage.bind(this);\n  }\n// ***********************************\n// End of constructor\n// ***********************************\n\n //  ==================================\n //  dropdown menu. First they choose\n //  a value/search tag in the Change event,\n //  then submit that value.\n //  ==================================\n  handleDropdownChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleDropdownSubmit(event) {\n    this.setState({displayArtResultInfo: {\"display\": \"none\"}})\n    this.setState({displayIntroMessage: {\"display\": \"none\"}})\n    this.cooperHewittSearchByTagFromAPI()\n    event.preventDefault();\n  }\n\n  cooperHewittSearchByTagFromAPI() {\n    this.setState({loading: true})\n\n    // ${this.state.value} is whatever keyword the user chooses from the dropdown menu\n    // The \"response\" does the following:\n    // 1) stops the loading spinner\n    // 2) removes the placeholder image\n    // 3) returns a random item (image, title, description & link url)\n    axios.get(`https://art-thief.herokuapp.com/searchbytag/`+`${this.state.value}`)\n    // axios.get(`http://localhost:8888/searchbytag/`+`${this.state.value}`)\n      .then( (response) => {\n\n        // Using the _Lodash library to first shuffle the response array,\n        // in order to pluck the first item from the response array.\n        response.data.objects = _Lodash.shuffle(response.data.objects)\n\n        console.log(`The search value is:`, this.state.value, `and there are`, (response.data.objects).length, `objects.`)\n\n        this.setState({loading: false});\n        this.setState({displayPlaceholderImage: {\"display\": \"none\"}})\n        this.setState({displayArtResultImage: {\"display\": \"block\"}})\n        this.setState({imageURL: response.data.objects[0].images[0].z.url})\n        this.setState({itemTitle: response.data.objects[0].title})\n        this.setState({itemMedium: response.data.objects[0].medium})\n        this.setState({itemInfo: response.data.objects[0].label_text})\n        this.setState({learnMoreURL: response.data.objects[0].url})\n        this.setState({displayArtResultInfo: {\"display\": \"block\"}})\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n //  ==================================\n //  modal: the expanded image\n //  ==================================\n  viewBigImage(event) {\n    this.setState({displayModal: {'display': \"block\"}})\n    this.setState({BigImageURL: this.imageURL})\n  }\n\n  closeBigImage(event) {\n    this.setState({displayModal: {'display': \"none\"}})\n  }\n\n\n\n\n//  ==================================\n//  And finally, the render\n//  ==================================\n  render() {\n    return (\n      <div className=\"App\">\n\n       <Header />\n\n        <div className=\"container\">\n\n          <div className=\"image-container-stack-vertical flex-item\">\n\n            <DropdownMenu handleDropdownChange={this.handleDropdownChange}\n                          handleDropdownSubmit={this.handleDropdownSubmit}\n                          parent_state={this.state}\n                          loading={this.state.loading} />\n\n            <PlaceholderImage parent_state={this.state} />\n\n            <ArtResult parent_state={this.state}\n                       viewBigImage={this.viewBigImage} />\n\n            <ImageModal parent_state={this.state}\n                        closeBigImage={this.closeBigImage} />\n\n          </div>\n\n          <div className=\"info-container-stack-horizontal flex-item\">\n\n            <InformationPanel parent_state={this.state} />\n\n          </div>\n\n         </div>\n\n       <Footer />\n\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}