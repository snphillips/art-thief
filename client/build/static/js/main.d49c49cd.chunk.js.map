{"version":3,"sources":["components/Header.js","components/PlaceholderImage.js","components/LoadingSpinner.js","components/DropdownMenu.js","components/ArtResult.js","components/ImageModal.js","components/InformationPanel.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","href","PlaceholderImage","style","parent_state","displayPlaceholderImage","id","alt","src","onMouseOver","event","currentTarget","onMouseOut","override","css","LoadingSpinner","sizeUnit","height","color","loading","DropdownMenu","onSubmit","handleDropdownSubmit","value","onChange","handleDropdownChange","type","ArtResult","displayArtResultImage","imageURL","onClick","viewBigImage","ImageModal","displayModal","closeBigImage","InformationPanel","displayIntroMessage","displayArtResultInfo","itemTitle","itemMedium","itemInfo","learnMoreURL","Footer","App","state","displayLargeArt","displayPlaceholderSquare","bind","this","setState","target","cooperHewittSearchByTagFromAPI","preventDefault","axios","get","then","response","data","objects","_Lodash","shuffle","console","log","length","images","z","url","title","medium","label_text","catch","error","BigImageURL","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uRAEe,SAASA,EAAOC,GAC3B,OACI,gCACE,wBAAIC,UAAU,UACZ,uBAAGC,KAAK,IAAID,UAAU,eAAtB,eCJG,SAASE,EAAiBH,GACvC,OACE,yBAAKI,MAAOJ,EAAMK,aAAaC,yBAE7B,yBAAKC,GAAG,oBAENC,IAAI,GACJC,IAAI,sCAEJC,YAAc,SAACC,GACbA,EAAMC,cAAcH,IAAM,mCAG5BI,WAAa,SAACF,GACZA,EAAMC,cAAcH,IAAM,0C,qKCXpC,IAAMK,EAAWC,YAAH,KAMC,SAASC,EAAehB,GACrC,OACE,0BAAMC,UAAU,iBACd,kBAAC,cAAD,CACEA,UAAWa,EACXG,SAAU,KAEVC,OAAQ,GACRC,MAAO,OACPC,QAASpB,EAAMoB,WChBR,SAASC,EAAarB,GACnC,OAEE,0BAAMsB,SAAUtB,EAAMuB,sBAEpB,4BACEhB,GAAG,MACHiB,MAAOxB,EAAMK,aAAamB,MAC1BC,SAAUzB,EAAM0B,sBAEhB,4BAAQF,MAAM,aAAd,yBACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,YAA9C,YACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,WAA9C,WACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,kBAA9C,kBACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,YAA9C,YACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,eAA9C,eACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,UAA9C,UACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,YAA9C,YACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,aAA9C,aACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,qBAA9C,qBACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,qBAA9C,qBACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,aAA9C,aACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,WAA9C,WACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,aAA9C,aACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,WAA9C,WACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,UAA9C,UACA,4BAAQvB,UAAU,sBAAsBuB,MAAM,kBAA9C,mBAGF,2BACEG,KAAK,SACL1B,UAAU,SACVM,GAAG,gBACHiB,MAAM,WAGR,kBAACR,EAAD,CAAgBI,QAASpB,EAAMoB,WCrCtB,SAASQ,EAAU5B,GAChC,OAEE,0BAAMC,UAAU,YACdG,MAAOJ,EAAMK,aAAawB,uBAExB,yBAAKpB,IAAKT,EAAMK,aAAayB,SAC3BtB,IAAI,gEACJP,UAAU,YACV8B,QAAS/B,EAAMgC,gBCTV,SAASC,EAAWjC,GACjC,OACE,yBAAKC,UAAU,mBAAmBG,MAAOJ,EAAMK,aAAa6B,cAC1D,yBAAKjC,UAAU,cACbQ,IAAKT,EAAMK,aAAayB,SACxBC,QAAS/B,EAAMmC,cACf3B,IAAI,MCNG,SAAS4B,EAAiBpC,GACrC,OACE,2BAAOC,UAAU,cACf,uBAAGG,MAAOJ,EAAMK,aAAagC,oBAAoBpC,UAAU,iBAA3D,6DACA,wBAAIG,MAAOJ,EAAMK,aAAaiC,qBAAqBrC,UAAU,cAAcD,EAAMK,aAAakC,WAC9F,uBAAGnC,MAAOJ,EAAMK,aAAaiC,qBAAqBrC,UAAU,eAAeD,EAAMK,aAAamC,YAC9F,uBAAGpC,MAAOJ,EAAMK,aAAaiC,qBAAqBrC,UAAU,oBAAoBD,EAAMK,aAAaoC,UACnG,uBAAGrC,MAAOJ,EAAMK,aAAaiC,sBAAsB,uBAAGrC,UAAU,kBAAkBC,KAAMF,EAAMK,aAAaqC,cAAxD,+BACnD,6BACA,6BACA,8BCXO,SAASC,EAAO3C,GAC3B,OAEI,gCACE,0BAAMC,UAAU,cAAa,uBAAGC,KAAK,qCAAR,uBAC7B,0BAAMD,UAAU,cAAa,uBAAGC,KAAK,2CAA0C,uBAAGD,UAAU,qB,ICQjF2C,E,kDACnB,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAED6C,MAAQ,CACXzB,SAAS,EAGTU,SAAS,GACTS,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,aAAa,GACblB,MAAM,YACNK,sBAAuB,CAAC,QAAW,QACnCS,qBAAsB,CAAC,QAAW,QAClCJ,aAAc,CAAC,QAAW,QAC1BG,oBAAqB,CAAC,QAAW,UACjCS,gBAAiB,CAAC,QAAW,QAC7BC,yBAA0B,CAAC,QAAW,UAIxC,EAAKrB,qBAAuB,EAAKA,qBAAqBsB,KAA1B,gBAC5B,EAAKzB,qBAAuB,EAAKA,qBAAqByB,KAA1B,gBAC5B,EAAKhB,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKb,cAAgB,EAAKA,cAAca,KAAnB,gBAzBJ,E,iEAoCErC,GACnBsC,KAAKC,SAAS,CAAC1B,MAAOb,EAAMwC,OAAO3B,U,2CAGhBb,GACnBsC,KAAKC,SAAS,CAACZ,qBAAsB,CAAC,QAAW,UACjDW,KAAKC,SAAS,CAACb,oBAAqB,CAAC,QAAW,UAChDY,KAAKG,iCACLzC,EAAM0C,mB,uDAG0B,IAAD,OAC/BJ,KAAKC,SAAS,CAAC9B,SAAS,IAOxBkC,IAAMC,IAAI,yDAAkDN,KAAKJ,MAAMrB,QAEpEgC,MAAM,SAACC,GAINA,EAASC,KAAKC,QAAUC,IAAQC,QAAQJ,EAASC,KAAKC,SAEtDG,QAAQC,IAAR,uBAAoC,EAAKlB,MAAMrB,MAA/C,gBAAwEiC,EAASC,KAAKC,QAASK,OAA/F,YAEA,EAAKd,SAAS,CAAC9B,SAAS,IACxB,EAAK8B,SAAS,CAAC5C,wBAAyB,CAAC,QAAW,UACpD,EAAK4C,SAAS,CAACrB,sBAAuB,CAAC,QAAW,WAClD,EAAKqB,SAAS,CAACpB,SAAU2B,EAASC,KAAKC,QAAQ,GAAGM,OAAO,GAAGC,EAAEC,MAC9D,EAAKjB,SAAS,CAACX,UAAWkB,EAASC,KAAKC,QAAQ,GAAGS,QACnD,EAAKlB,SAAS,CAACV,WAAYiB,EAASC,KAAKC,QAAQ,GAAGU,SACpD,EAAKnB,SAAS,CAACT,SAAUgB,EAASC,KAAKC,QAAQ,GAAGW,aAClD,EAAKpB,SAAS,CAACR,aAAce,EAASC,KAAKC,QAAQ,GAAGQ,MACtD,EAAKjB,SAAS,CAACZ,qBAAsB,CAAC,QAAW,cAElDiC,OAAM,SAAUC,GACfV,QAAQC,IAAIS,Q,mCAOL7D,GACXsC,KAAKC,SAAS,CAAChB,aAAc,CAAC,QAAW,WACzCe,KAAKC,SAAS,CAACuB,YAAaxB,KAAKnB,a,oCAGrBnB,GACZsC,KAAKC,SAAS,CAAChB,aAAc,CAAC,QAAW,Y,+BAUzC,OACE,yBAAKjC,UAAU,OAEd,kBAACF,EAAD,MAEC,yBAAKE,UAAU,aAEb,yBAAKA,UAAU,4CAEb,kBAACoB,EAAD,CAAcK,qBAAsBuB,KAAKvB,qBAC3BH,qBAAsB0B,KAAK1B,qBAC3BlB,aAAc4C,KAAKJ,MACnBzB,QAAS6B,KAAKJ,MAAMzB,UAElC,kBAACjB,EAAD,CAAkBE,aAAc4C,KAAKJ,QAErC,kBAACjB,EAAD,CAAWvB,aAAc4C,KAAKJ,MACnBb,aAAciB,KAAKjB,eAE9B,kBAACC,EAAD,CAAY5B,aAAc4C,KAAKJ,MACnBV,cAAec,KAAKd,iBAIlC,yBAAKlC,UAAU,6CAEb,kBAACmC,EAAD,CAAkB/B,aAAc4C,KAAKJ,UAM1C,kBAACF,EAAD,W,GApI0B+B,aCHbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,MAAK,SAAA+B,GACjCA,EAAaC,kB","file":"static/js/main.d49c49cd.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header(props) {\n    return (\n        <header>\n          <h1 className=\"header\">\n            <a href=\"/\" className=\"header-link\">\n              Art Thief\n            </a>\n          </h1>\n        </header>\n    );\n}\n","import React from 'react';\n\nexport default function PlaceholderImage(props) {\n  return (\n    <div style={props.parent_state.displayPlaceholderImage}>\n\n      <img id=\"placeholder-image\"\n\n        alt=\"\"\n        src=\"./images/Cooper-Hewitt_Museum02.png\"\n\n        onMouseOver={ (event) => {\n          event.currentTarget.src = \"https://i.imgur.com/IwBKBye.png\"\n        }}\n\n        onMouseOut={ (event) => {\n          event.currentTarget.src = \"./images/Cooper-Hewitt_Museum02.png\"\n        }}\n\n      />\n\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport { css } from 'emotion';\n// react-spinners is an npm package\nimport { ScaleLoader } from 'react-spinners';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nexport default function LoadingSpinner(props) {\n  return (\n    <span className='sweet-loading'>\n      <ScaleLoader\n        className={override}\n        sizeUnit={\"px\"}\n        // size={32}\n        height={32}\n        color={'#000'}\n        loading={props.loading}\n      />\n    </span>\n  )\n}\n","import React from 'react';\n// the spinner in an npm package\nimport LoadingSpinner from './LoadingSpinner';\n\nexport default function DropdownMenu(props) {\n  return (\n\n    <form onSubmit={props.handleDropdownSubmit} >\n\n      <select \n        id=\"tag\"\n        value={props.parent_state.value}\n        onChange={props.handleDropdownChange}\n      >\n        <option value=\"exoticism\">select search keyword</option>\n        <option className=\"dropdown-item-style\" value=\"abstract\">abstract</option>\n        <option className=\"dropdown-item-style\" value=\"angular\">angular</option>\n        <option className=\"dropdown-item-style\" value=\"graphic design\">graphic design</option>\n        <option className=\"dropdown-item-style\" value=\"art deco\">art deco</option>\n        <option className=\"dropdown-item-style\" value=\"art nouveau\">art nouveau</option>\n        <option className=\"dropdown-item-style\" value=\"chairs\">chairs</option>\n        <option className=\"dropdown-item-style\" value=\"circular\">circular</option>\n        <option className=\"dropdown-item-style\" value=\"geometric\">geometric</option>\n        <option className=\"dropdown-item-style\" value=\"graphic designers\">graphic designers</option>\n        <option className=\"dropdown-item-style\" value=\"industrial design\">industrial design</option>\n        <option className=\"dropdown-item-style\" value=\"intricate\">intricate</option>\n        <option className=\"dropdown-item-style\" value=\"kitchen\">kitchen</option>\n        <option className=\"dropdown-item-style\" value=\"modernism\">modernism</option>\n        <option className=\"dropdown-item-style\" value=\"posters\">posters</option>\n        <option className=\"dropdown-item-style\" value=\"simple\">simple</option>\n        <option className=\"dropdown-item-style\" value=\"textile design\">textile desgin</option>\n      </select>\n\n      <input\n        type=\"submit\"\n        className=\"button\"\n        id=\"submit-button\"\n        value=\"submit\"\n      />\n\n      <LoadingSpinner loading={props.loading} />\n\n    </form>\n  );\n}\n","import React from 'react';\n\n\nexport default function ArtResult(props) {\n  return (\n\n    <span className=\"ArtResult\"\n      style={props.parent_state.displayArtResultImage}\n      >\n        <img src={props.parent_state.imageURL}\n          alt=\"random item from Cooper Hewitt collection based on search tag\"\n          className=\"image-URL\"\n          onClick={props.viewBigImage}\n        />\n\n      </span>\n    );\n\n}\n\n\n","import React from 'react';\n\n\nexport default function ImageModal(props) {\n  return (\n    <div className=\"modal-background\" style={props.parent_state.displayModal}>\n      <img className=\"image-large\"\n        src={props.parent_state.imageURL}\n        onClick={props.closeBigImage}\n        alt=\"\"\n      />\n    </div>\n\n  );\n}\n","import React from 'react';\n\n\nexport default function InformationPanel(props) {\n    return (\n      <aside className=\"info-panel\">\n        <p style={props.parent_state.displayIntroMessage}className=\"intro-message\">Be inspired by random items from the Cooper Hewitt Museum</p>\n        <h2 style={props.parent_state.displayArtResultInfo}className=\"item-title\">{props.parent_state.itemTitle}</h2>\n        <p style={props.parent_state.displayArtResultInfo}className=\"item-medium\">{props.parent_state.itemMedium}</p>\n        <p style={props.parent_state.displayArtResultInfo}className=\"item-information\">{props.parent_state.itemInfo}</p>\n        <p style={props.parent_state.displayArtResultInfo}><a className=\"learn-more-link\" href={props.parent_state.learnMoreURL}>learn more about this item</a></p>\n        <br/>\n        <br/>\n        <br/>\n      </aside>\n    );\n}\n\n","import React from 'react';\n\nexport default function Footer(props) {\n    return (\n\n        <footer>\n          <span className=\"footerLink\"><a href=\"https://sarahphillipsdev.surge.sh\"> by Sarah Phillips</a></span>\n          <span className=\"footerLink\"><a href=\"https://github.com/snphillips/art-thief\"><i className=\"fab fa-github\"></i></a></span>\n        </footer>\n    );\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _Lodash from 'lodash';\n\n// ===============================\n// Importing Pages\n// ===============================\nimport Header from './components/Header';\nimport PlaceholderImage from './components/PlaceholderImage';\nimport DropdownMenu from './components/DropdownMenu';\nimport ArtResult from './components/ArtResult';\nimport ImageModal from './components/ImageModal';\nimport InformationPanel from './components/InformationPanel';\nimport Footer from './components/Footer';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false, // the loading spinner\n      // serverSource: 'https://art-thief.herokuapp.com/searchbytag',\n      // serverSource: 'http://localhost:8000/searchbytag',\n      imageURL:\"\",\n      itemTitle: \"\",\n      itemMedium: \"\",\n      itemInfo: \"\",\n      learnMoreURL:\"\",\n      value:\"exoticism\", //starting with a value in case the user doesn't choose before hitting submit\n      displayArtResultImage: {\"display\": \"none\"},\n      displayArtResultInfo: {\"display\": \"none\"}, // this refers to all image details like title, materials, url etc.\n      displayModal: {\"display\": \"none\"},\n      displayIntroMessage: {\"display\": \"inline\"},\n      displayLargeArt: {\"display\": \"none\"},\n      displayPlaceholderSquare: {\"display\": \"block\"},\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    this.handleDropdownSubmit = this.handleDropdownSubmit.bind(this);\n    this.viewBigImage = this.viewBigImage.bind(this);\n    this.closeBigImage = this.closeBigImage.bind(this);\n  }\n/* ***********************************\nEnd of constructor\n*********************************** */\n\n/*   ==================================\n  dropdown menu. First they choose\n  a value/search tag in the Change event,\n  then submit that value.\n  ================================== */\n  handleDropdownChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleDropdownSubmit(event) {\n    this.setState({displayArtResultInfo: {\"display\": \"none\"}})\n    this.setState({displayIntroMessage: {\"display\": \"none\"}})\n    this.cooperHewittSearchByTagFromAPI()\n    event.preventDefault();\n  }\n\n  cooperHewittSearchByTagFromAPI() {\n    this.setState({loading: true})\n\n    // ${this.state.value} is whatever keyword the user chooses from the dropdown menu\n    // The \"response\" does the following:\n    // 1) stops the loading spinner\n    // 2) removes the placeholder image\n    // 3) returns a random item (image, title, description & link url)\n    axios.get(`https://art-thief.herokuapp.com/searchbytag/`+`${this.state.value}`)\n    // axios.get(`http://localhost:8888/searchbytag/`+`${this.state.value}`)\n      .then( (response) => {\n\n        // Using the _Lodash library to first shuffle the response array,\n        // in order to pluck the first item from the response array.\n        response.data.objects = _Lodash.shuffle(response.data.objects)\n\n        console.log(`The search value is:`, this.state.value, `and there are`, (response.data.objects).length, `objects.`)\n\n        this.setState({loading: false});\n        this.setState({displayPlaceholderImage: {\"display\": \"none\"}})\n        this.setState({displayArtResultImage: {\"display\": \"block\"}})\n        this.setState({imageURL: response.data.objects[0].images[0].z.url})\n        this.setState({itemTitle: response.data.objects[0].title})\n        this.setState({itemMedium: response.data.objects[0].medium})\n        this.setState({itemInfo: response.data.objects[0].label_text})\n        this.setState({learnMoreURL: response.data.objects[0].url})\n        this.setState({displayArtResultInfo: {\"display\": \"block\"}})\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n/*   ==================================\n  modal: the expanded image\n  ================================== */\n  viewBigImage(event) {\n    this.setState({displayModal: {'display': \"block\"}})\n    this.setState({BigImageURL: this.imageURL})\n  }\n\n  closeBigImage(event) {\n    this.setState({displayModal: {'display': \"none\"}})\n  }\n\n\n\n\n/*  ==================================\n And finally, the render\n ================================== */\n  render() {\n    return (\n      <div className=\"App\">\n\n       <Header />\n\n        <div className=\"container\">\n\n          <div className=\"image-container-stack-vertical flex-item\">\n\n            <DropdownMenu handleDropdownChange={this.handleDropdownChange}\n                          handleDropdownSubmit={this.handleDropdownSubmit}\n                          parent_state={this.state}\n                          loading={this.state.loading} />\n\n            <PlaceholderImage parent_state={this.state} />\n\n            <ArtResult parent_state={this.state}\n                       viewBigImage={this.viewBigImage} />\n\n            <ImageModal parent_state={this.state}\n                        closeBigImage={this.closeBigImage} />\n\n          </div>\n\n          <div className=\"info-container-stack-horizontal flex-item\">\n\n            <InformationPanel parent_state={this.state} />\n\n          </div>\n\n         </div>\n\n       <Footer />\n\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}